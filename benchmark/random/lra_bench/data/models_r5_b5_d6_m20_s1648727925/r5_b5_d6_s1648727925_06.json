(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun x_3 () Real)
(declare-fun x_4 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(declare-fun A_3 () Bool)
(declare-fun A_4 () Bool)
(assert (let ((.def_0 (* (- (/ 469712938433825 562949953421312)) x_3))) (let ((.def_1 (* (- (/ 376692312416301 1125899906842624)) x_2))) (let ((.def_2 (* (/ 104019274116521 140737488355328) x_0))) (let ((.def_3 (+ .def_2 .def_1 .def_0))) (let ((.def_4 (< .def_3 (/ 7433983534903575 9007199254740992)))) (let ((.def_5 (not .def_4))) (let ((.def_6 (* (- (/ 117776976609717 1125899906842624)) x_0))) (let ((.def_7 (< .def_6 (/ 1594110918258347 562949953421312)))) (let ((.def_8 (or A_0 A_2 A_4 .def_7))) (let ((.def_9 (and .def_8 .def_5))) (let ((.def_10 (* (- (/ 4274636622407115 4503599627370496)) x_1))) (let ((.def_11 (* (- (/ 3628949039009025 4503599627370496)) x_3))) (let ((.def_12 (+ .def_11 .def_10))) (let ((.def_13 (< .def_12 (/ 2447040048166059 1125899906842624)))) (let ((.def_14 (* (- (/ 2087811353930131 2251799813685248)) x_0))) (let ((.def_15 (* (- (/ 2879647904869509 4503599627370496)) x_3))) (let ((.def_16 (* (/ 1560737319637095 2251799813685248) x_2))) (let ((.def_17 (+ .def_16 .def_15 .def_14))) (let ((.def_18 (< .def_17 (/ 4462083617011213 1125899906842624)))) (let ((.def_19 (and A_1 .def_18 .def_13))) (let ((.def_20 (not .def_19))) (let ((.def_21 (or .def_20 .def_9))) (let ((.def_22 (not .def_21))) (let ((.def_23 (not A_0))) (let ((.def_24 (* (/ 957566963819265 1125899906842624) x_3))) (let ((.def_25 (< .def_24 (/ 4850692014233855 9007199254740992)))) (let ((.def_26 (or A_1 .def_25 A_1 A_2))) (let ((.def_27 (and .def_26 .def_23))) (let ((.def_28 (not .def_27))) (let ((.def_29 (* (- (/ 1465709893780611 2251799813685248)) x_0))) (let ((.def_30 (* (- (/ 280332382979199 4503599627370496)) x_3))) (let ((.def_31 (* (- (/ 59454400451259 1125899906842624)) x_4))) (let ((.def_32 (* (- (/ 264072465322385 1125899906842624)) x_2))) (let ((.def_33 (+ .def_32 .def_31 .def_30 .def_29))) (let ((.def_34 (< .def_33 (/ 3845455661034375 9007199254740992)))) (let ((.def_35 (* (/ 544161092528735 1125899906842624) x_1))) (let ((.def_36 (* (- (/ 204189517353917 2251799813685248)) x_3))) (let ((.def_37 (* (/ 1864865986167029 2251799813685248) x_4))) (let ((.def_38 (* (- (/ 210182063819769 562949953421312)) x_0))) (let ((.def_39 (+ .def_38 .def_37 .def_36 .def_35))) (let ((.def_40 (< .def_39 (/ 187276103165009 140737488355328)))) (let ((.def_41 (* (- (/ 3467947227022911 4503599627370496)) x_2))) (let ((.def_42 (* (- (/ 4435929380257543 4503599627370496)) x_4))) (let ((.def_43 (* (/ 1086137857591749 1125899906842624) x_0))) (let ((.def_44 (* (- (/ 59333274692401 2251799813685248)) x_1))) (let ((.def_45 (* (- (/ 3237798594236923 4503599627370496)) x_3))) (let ((.def_46 (+ .def_45 .def_44 .def_43 .def_42 .def_41))) (let ((.def_47 (< .def_46 (/ 684317105598939 281474976710656)))) (let ((.def_48 (and .def_47 .def_40 A_0 A_3))) (let ((.def_49 (* (- (/ 286659636753749 2251799813685248)) x_4))) (let ((.def_50 (* (/ 3712080895286369 4503599627370496) x_3))) (let ((.def_51 (* (- (/ 94461589389391 1125899906842624)) x_2))) (let ((.def_52 (+ .def_51 .def_50 .def_49))) (let ((.def_53 (< .def_52 (/ 3287518099203905 9007199254740992)))) (let ((.def_54 (* (/ 3314097912625953 4503599627370496) x_2))) (let ((.def_55 (* (/ 19443524788535 2251799813685248) x_3))) (let ((.def_56 (* (- (/ 647507915840473 1125899906842624)) x_1))) (let ((.def_57 (* (- (/ 2224748919240695 4503599627370496)) x_0))) (let ((.def_58 (* (- (/ 2162940045567109 4503599627370496)) x_4))) (let ((.def_59 (+ .def_58 .def_57 .def_56 .def_55 .def_54))) (let ((.def_60 (< .def_59 (/ 1507465021327211 562949953421312)))) (let ((.def_61 (* (- (/ 3847275612168987 4503599627370496)) x_2))) (let ((.def_62 (* (/ 2819466049927049 4503599627370496) x_1))) (let ((.def_63 (* (/ 122882701410481 1125899906842624) x_4))) (let ((.def_64 (* (- (/ 285008121000569 2251799813685248)) x_0))) (let ((.def_65 (* (- (/ 2973831503853087 4503599627370496)) x_3))) (let ((.def_66 (+ .def_65 .def_64 .def_63 .def_62 .def_61))) (let ((.def_67 (< .def_66 (/ 2455207402567237 1125899906842624)))) (let ((.def_68 (or .def_67 .def_60 .def_53))) (let ((.def_69 (not A_1))) (let ((.def_70 (* (/ 799629645327159 4503599627370496) x_3))) (let ((.def_71 (* (- (/ 15332766902551 281474976710656)) x_1))) (let ((.def_72 (* (- (/ 1079169713639261 4503599627370496)) x_0))) (let ((.def_73 (+ .def_72 .def_71 .def_70))) (let ((.def_74 (< .def_73 (/ 3308642089595155 9007199254740992)))) (let ((.def_75 (and A_1 .def_74 A_3 A_0))) (let ((.def_76 (and .def_75 .def_69 .def_68 .def_48))) (let ((.def_77 (* (/ 1863964705159661 2251799813685248) x_0))) (let ((.def_78 (< .def_77 (/ 4535461905325825 1125899906842624)))) (let ((.def_79 (or .def_78 A_3))) (let ((.def_80 (not .def_79))) (let ((.def_81 (and .def_80 .def_76 .def_34))) (let ((.def_82 (or .def_81 .def_28))) (let ((.def_83 (or .def_82 .def_22))) (let ((.def_84 (not .def_83))) .def_84))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
