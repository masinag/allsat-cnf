(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (* (/ 4455125220855867 4503599627370496) x_2))) (let ((.def_1 (< .def_0 (/ 79999083292905 4503599627370496)))) (let ((.def_2 (and .def_1 A_2))) (let ((.def_3 (not .def_2))) (let ((.def_4 (* (/ 18441218187115 1125899906842624) x_2))) (let ((.def_5 (* (/ 2147692042616217 4503599627370496) x_1))) (let ((.def_6 (+ .def_5 .def_4))) (let ((.def_7 (< .def_6 (/ 4358583889726383 4503599627370496)))) (let ((.def_8 (* (- (/ 1819828935160645 2251799813685248)) x_0))) (let ((.def_9 (* (- (/ 1658687189351217 2251799813685248)) x_1))) (let ((.def_10 (+ .def_9 .def_8))) (let ((.def_11 (< .def_10 (/ 2210119697727269 1125899906842624)))) (let ((.def_12 (or .def_11 .def_7 A_0 A_2))) (let ((.def_13 (not .def_12))) (let ((.def_14 (and .def_13 .def_3))) .def_14))))))))))))))))
(check-sat)
