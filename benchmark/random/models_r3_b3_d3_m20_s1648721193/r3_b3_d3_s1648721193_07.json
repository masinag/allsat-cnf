(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (* (/ 2913790333960857 4503599627370496) x_0))) (let ((.def_1 (* (/ 795348324704779 1125899906842624) x_2))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< .def_2 (/ 7615635210324327 4503599627370496)))) (let ((.def_4 (* (- (/ 1182772228291413 2251799813685248)) x_2))) (let ((.def_5 (* (/ 2063958049356621 2251799813685248) x_1))) (let ((.def_6 (+ .def_5 .def_4))) (let ((.def_7 (< .def_6 (/ 6188082834123439 2251799813685248)))) (let ((.def_8 (and .def_7 A_0 .def_3))) (let ((.def_9 (and A_0 A_2 A_0 A_2))) (let ((.def_10 (or .def_9 .def_8))) (let ((.def_11 (not .def_10))) .def_11)))))))))))))
(check-sat)
