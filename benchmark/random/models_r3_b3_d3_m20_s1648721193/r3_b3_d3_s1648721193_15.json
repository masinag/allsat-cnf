(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (and A_1 A_0 A_0))) (let ((.def_1 (not .def_0))) (let ((.def_2 (* (/ 1516535925682579 2251799813685248) x_0))) (let ((.def_3 (* (- (/ 131769224461573 140737488355328)) x_2))) (let ((.def_4 (* (/ 173708221364399 2251799813685248) x_1))) (let ((.def_5 (+ .def_4 .def_3 .def_2))) (let ((.def_6 (< .def_5 (/ 3082393962214673 1125899906842624)))) (let ((.def_7 (and A_0 .def_6))) (let ((.def_8 (not .def_7))) (let ((.def_9 (* (/ 1777846787518211 2251799813685248) x_1))) (let ((.def_10 (* (- (/ 404916790233497 4503599627370496)) x_2))) (let ((.def_11 (* (/ 1277952293008759 2251799813685248) x_0))) (let ((.def_12 (+ .def_11 .def_10 .def_9))) (let ((.def_13 (< .def_12 (/ 2020359701946795 2251799813685248)))) (let ((.def_14 (not .def_13))) (let ((.def_15 (or A_2 A_1))) (let ((.def_16 (* (/ 6507710685443 140737488355328) x_1))) (let ((.def_17 (< .def_16 (/ 4211769456990981 9007199254740992)))) (let ((.def_18 (not .def_17))) (let ((.def_19 (or .def_18 .def_15 .def_14))) (let ((.def_20 (or .def_19 .def_8 .def_1))) .def_20))))))))))))))))))))))
(check-sat)
