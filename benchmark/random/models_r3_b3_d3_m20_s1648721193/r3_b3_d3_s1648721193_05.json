(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (* (- (/ 3171788489714805 4503599627370496)) x_2))) (let ((.def_1 (* (- (/ 1335417137126981 2251799813685248)) x_0))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< .def_2 (/ 2879825942212793 1125899906842624)))) (let ((.def_4 (* (- (/ 1448757354555871 4503599627370496)) x_2))) (let ((.def_5 (* (- (/ 2044742908105051 2251799813685248)) x_1))) (let ((.def_6 (* (- (/ 1102294791916507 4503599627370496)) x_0))) (let ((.def_7 (+ .def_6 .def_5 .def_4))) (let ((.def_8 (< .def_7 (/ 2750074223037495 1125899906842624)))) (let ((.def_9 (and .def_8 .def_3))) (let ((.def_10 (* (- (/ 1571183417453299 4503599627370496)) x_2))) (let ((.def_11 (* (/ 448730064434791 1125899906842624) x_1))) (let ((.def_12 (+ .def_11 .def_10))) (let ((.def_13 (< .def_12 (/ 414827186033777 281474976710656)))) (let ((.def_14 (and A_1 .def_13))) (let ((.def_15 (* (/ 545655055259569 1125899906842624) x_1))) (let ((.def_16 (* (- (/ 313248759137705 562949953421312)) x_0))) (let ((.def_17 (+ .def_16 .def_15))) (let ((.def_18 (< .def_17 (/ 1947240581962373 1125899906842624)))) (let ((.def_19 (not .def_18))) (let ((.def_20 (or .def_19 .def_14 .def_9))) (let ((.def_21 (* (/ 2782873889037823 4503599627370496) x_0))) (let ((.def_22 (< .def_21 (/ 7944083017118103 4503599627370496)))) (let ((.def_23 (not .def_22))) (let ((.def_24 (* (- (/ 267019576244265 2251799813685248)) x_2))) (let ((.def_25 (* (/ 1534121274181287 2251799813685248) x_1))) (let ((.def_26 (* (/ 459664822477389 2251799813685248) x_0))) (let ((.def_27 (+ .def_26 .def_25 .def_24))) (let ((.def_28 (< .def_27 (/ 1435067381279517 2251799813685248)))) (let ((.def_29 (* (- (/ 1950591998557345 4503599627370496)) x_2))) (let ((.def_30 (* (/ 1777699805395245 4503599627370496) x_1))) (let ((.def_31 (+ .def_30 .def_29))) (let ((.def_32 (< .def_31 (/ 3868870223901045 4503599627370496)))) (let ((.def_33 (and A_1 .def_32 A_1 .def_28))) (let ((.def_34 (and .def_33 .def_23))) (let ((.def_35 (* (- (/ 414543057102373 562949953421312)) x_2))) (let ((.def_36 (* (/ 172645345393063 2251799813685248) x_0))) (let ((.def_37 (+ .def_36 .def_35))) (let ((.def_38 (< .def_37 (/ 1416645354948925 1125899906842624)))) (let ((.def_39 (not .def_38))) (let ((.def_40 (or A_2 A_1 A_1))) (let ((.def_41 (not A_2))) (let ((.def_42 (and A_0 A_2))) (let ((.def_43 (or .def_42 .def_41 .def_40 .def_39))) (let ((.def_44 (* (- (/ 3477756494164159 4503599627370496)) x_1))) (let ((.def_45 (< .def_44 (/ 6310877402230569 4503599627370496)))) (let ((.def_46 (or .def_45 A_1 A_1))) (let ((.def_47 (not .def_46))) (let ((.def_48 (or .def_47 .def_43 .def_34 .def_20))) .def_48))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
