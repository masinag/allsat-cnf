(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(assert (let ((.def_0 (not A_0))) (let ((.def_1 (* (- (/ 1978842008536117 4503599627370496)) x_1))) (let ((.def_2 (* (- (/ 1697062901823583 4503599627370496)) x_2))) (let ((.def_3 (* (- (/ 485493148362167 1125899906842624)) x_0))) (let ((.def_4 (+ .def_3 .def_2 .def_1))) (let ((.def_5 (< .def_4 (/ 1269058883272277 1125899906842624)))) (let ((.def_6 (or .def_5 A_0))) (let ((.def_7 (and .def_6 .def_0 .def_0))) (let ((.def_8 (not .def_7))) .def_8))))))))))
(check-sat)
