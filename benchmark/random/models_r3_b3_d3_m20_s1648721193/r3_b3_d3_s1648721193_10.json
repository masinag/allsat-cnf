(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (* (/ 1532882614445195 4503599627370496) x_2))) (let ((.def_1 (< .def_0 (/ 5301424356027087 9007199254740992)))) (let ((.def_2 (not .def_1))) (let ((.def_3 (* (/ 1231720176470487 4503599627370496) x_2))) (let ((.def_4 (* (/ 66906999846039 562949953421312) x_1))) (let ((.def_5 (* (/ 91524329909729 281474976710656) x_0))) (let ((.def_6 (+ .def_5 .def_4 .def_3))) (let ((.def_7 (< .def_6 (/ 2394886829560587 4503599627370496)))) (let ((.def_8 (and A_2 .def_7))) (let ((.def_9 (not A_2))) (let ((.def_10 (or .def_9 .def_8 .def_2))) (let ((.def_11 (* (/ 1846227797908485 2251799813685248) x_2))) (let ((.def_12 (< .def_11 (/ 2423590957689507 9007199254740992)))) (let ((.def_13 (and A_1 A_2 .def_12 A_0))) (let ((.def_14 (* (- (/ 2089521794007987 4503599627370496)) x_2))) (let ((.def_15 (* (- (/ 623477738391153 4503599627370496)) x_1))) (let ((.def_16 (+ .def_15 .def_14))) (let ((.def_17 (< .def_16 (/ 328604920001487 281474976710656)))) (let ((.def_18 (not .def_17))) (let ((.def_19 (or A_1 A_2 A_1))) (let ((.def_20 (or .def_19 .def_18 .def_13))) (let ((.def_21 (* (/ 2093332568632827 2251799813685248) x_0))) (let ((.def_22 (* (- (/ 3293125521732119 4503599627370496)) x_1))) (let ((.def_23 (+ .def_22 .def_21))) (let ((.def_24 (< .def_23 (/ 1320392620922731 1125899906842624)))) (let ((.def_25 (or A_0 A_2 A_1 .def_24))) (let ((.def_26 (* (- (/ 571214618500685 4503599627370496)) x_2))) (let ((.def_27 (* (- (/ 2810988955591005 4503599627370496)) x_0))) (let ((.def_28 (* (/ 1802801114101193 4503599627370496) x_1))) (let ((.def_29 (+ .def_28 .def_27 .def_26))) (let ((.def_30 (< .def_29 (/ 778772793452787 4503599627370496)))) (let ((.def_31 (* (- (/ 208465586973235 562949953421312)) x_0))) (let ((.def_32 (* (- (/ 910533701287409 1125899906842624)) x_2))) (let ((.def_33 (* (- (/ 318893322903189 562949953421312)) x_1))) (let ((.def_34 (+ .def_33 .def_32 .def_31))) (let ((.def_35 (< .def_34 (/ 4363810778830865 2251799813685248)))) (let ((.def_36 (and .def_35 .def_30))) (let ((.def_37 (or .def_9 .def_36 .def_25))) (let ((.def_38 (or .def_37 .def_20 .def_10 A_2))) .def_38))))))))))))))))))))))))))))))))))))))))
(check-sat)
