(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (not A_1))) (let ((.def_1 (* (/ 741960244488335 1125899906842624) x_2))) (let ((.def_2 (* (/ 4093652701566823 4503599627370496) x_0))) (let ((.def_3 (* (/ 4181734160293271 4503599627370496) x_1))) (let ((.def_4 (+ .def_3 .def_2 .def_1))) (let ((.def_5 (< .def_4 (/ 1513049931289733 1125899906842624)))) (let ((.def_6 (not .def_5))) (let ((.def_7 (or A_2 A_0))) (let ((.def_8 (* (/ 2136220137060805 4503599627370496) x_2))) (let ((.def_9 (< .def_8 (/ 1294929048358653 9007199254740992)))) (let ((.def_10 (not .def_9))) (let ((.def_11 (and .def_10 .def_7 .def_6 .def_0))) (let ((.def_12 (* (- (/ 981515454040239 2251799813685248)) x_0))) (let ((.def_13 (* (- (/ 369810529299723 562949953421312)) x_1))) (let ((.def_14 (* (- (/ 4162608111669413 4503599627370496)) x_2))) (let ((.def_15 (+ .def_14 .def_13 .def_12))) (let ((.def_16 (< .def_15 (/ 5010111006936013 2251799813685248)))) (let ((.def_17 (and A_2 A_2 .def_16))) (let ((.def_18 (* (/ 1723724230520463 4503599627370496) x_2))) (let ((.def_19 (* (/ 3612264046212041 4503599627370496) x_1))) (let ((.def_20 (* (/ 1643074236197879 4503599627370496) x_0))) (let ((.def_21 (+ .def_20 .def_19 .def_18))) (let ((.def_22 (< .def_21 (/ 2766470712880089 1125899906842624)))) (let ((.def_23 (or A_1 .def_22 A_1 A_1))) (let ((.def_24 (or .def_23 .def_17))) (let ((.def_25 (or .def_24 .def_11))) .def_25)))))))))))))))))))))))))))
(check-sat)
