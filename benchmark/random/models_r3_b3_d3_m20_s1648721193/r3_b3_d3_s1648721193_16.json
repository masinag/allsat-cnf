(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(assert (let ((.def_0 (* (/ 901879900552429 4503599627370496) x_2))) (let ((.def_1 (< .def_0 (/ 3400737939050627 2251799813685248)))) (let ((.def_2 (* (/ 3936515771289427 4503599627370496) x_0))) (let ((.def_3 (* (/ 462401890283731 4503599627370496) x_1))) (let ((.def_4 (* (- (/ 2223589527213499 2251799813685248)) x_2))) (let ((.def_5 (+ .def_4 .def_3 .def_2))) (let ((.def_6 (< .def_5 (/ 6719634272129625 9007199254740992)))) (let ((.def_7 (* (- (/ 15629271140591 562949953421312)) x_1))) (let ((.def_8 (* (- (/ 3131459608114355 4503599627370496)) x_2))) (let ((.def_9 (+ .def_8 .def_7))) (let ((.def_10 (< .def_9 (/ 7258432839953751 9007199254740992)))) (let ((.def_11 (and .def_10 .def_6 .def_1))) (let ((.def_12 (* (- (/ 738301177492453 4503599627370496)) x_0))) (let ((.def_13 (< .def_12 (/ 3355083026319225 1125899906842624)))) (let ((.def_14 (* (/ 56841308111701 2251799813685248) x_2))) (let ((.def_15 (< .def_14 (/ 5981482173236323 2251799813685248)))) (let ((.def_16 (and A_2 A_2 .def_15 .def_13))) (let ((.def_17 (or .def_16 .def_11))) (let ((.def_18 (* (/ 274490712809283 4503599627370496) x_2))) (let ((.def_19 (< .def_18 (/ 1731982675048677 4503599627370496)))) (let ((.def_20 (and A_1 .def_19 A_1))) (let ((.def_21 (not .def_20))) (let ((.def_22 (or .def_21 .def_17))) .def_22))))))))))))))))))))))))
(check-sat)
