(set-logic QF_LRA)
(declare-fun A_2 () Bool)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(assert (let ((.def_0 (* (- (/ 328743314952871 2251799813685248)) x_2))) (let ((.def_1 (* (/ 173233859172123 562949953421312) x_0))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< .def_2 (/ 317962730075981 140737488355328)))) (let ((.def_4 (not .def_3))) (let ((.def_5 (* (- (/ 1373630684824307 2251799813685248)) x_2))) (let ((.def_6 (< .def_5 (/ 4252047554211165 9007199254740992)))) (let ((.def_7 (* (- (/ 4435504954434669 4503599627370496)) x_0))) (let ((.def_8 (* (- (/ 193595121085879 281474976710656)) x_1))) (let ((.def_9 (+ .def_8 .def_7))) (let ((.def_10 (< .def_9 (/ 914700892485127 562949953421312)))) (let ((.def_11 (or .def_10 .def_6))) (let ((.def_12 (not A_2))) (let ((.def_13 (and .def_12 .def_11 .def_4))) (let ((.def_14 (not .def_13))) .def_14))))))))))))))))
(check-sat)
