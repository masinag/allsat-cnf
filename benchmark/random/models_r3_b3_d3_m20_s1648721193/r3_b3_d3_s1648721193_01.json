(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_1 () Bool)
(assert (let ((.def_0 (* (- (/ 1332875844596791 4503599627370496)) x_0))) (let ((.def_1 (* (- (/ 826706152734947 2251799813685248)) x_1))) (let ((.def_2 (* (/ 363266355179871 562949953421312) x_2))) (let ((.def_3 (+ .def_2 .def_1 .def_0))) (let ((.def_4 (< .def_3 (/ 1335640061040003 1125899906842624)))) (let ((.def_5 (* (- (/ 2544194570632311 4503599627370496)) x_1))) (let ((.def_6 (* (- (/ 2004238547986287 2251799813685248)) x_2))) (let ((.def_7 (* (- (/ 2210671012496113 4503599627370496)) x_0))) (let ((.def_8 (+ .def_7 .def_6 .def_5))) (let ((.def_9 (< .def_8 (/ 2631378795724577 1125899906842624)))) (let ((.def_10 (* (- (/ 516933057375811 4503599627370496)) x_1))) (let ((.def_11 (* (/ 731973684135521 4503599627370496) x_2))) (let ((.def_12 (* (/ 664396074301673 4503599627370496) x_0))) (let ((.def_13 (+ .def_12 .def_11 .def_10))) (let ((.def_14 (< .def_13 (/ 1917834095664189 1125899906842624)))) (let ((.def_15 (and .def_14 .def_9 .def_4))) (let ((.def_16 (* (- (/ 1600297743990719 4503599627370496)) x_0))) (let ((.def_17 (< .def_16 (/ 1950731323731885 4503599627370496)))) (let ((.def_18 (or .def_17 A_1 A_1))) (let ((.def_19 (or .def_18 .def_15))) (let ((.def_20 (not .def_19))) .def_20))))))))))))))))))))))
(check-sat)
